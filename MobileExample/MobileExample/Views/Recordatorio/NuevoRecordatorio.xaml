<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             x:Class="MobileExample.Views.NuevoRecordatorio"
		     Title="Nuevo Recordatorio"
              Style="{StaticResource PageStyle}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Guardar" Clicked="GuardarRecordatorio" />
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <ScrollView>
            <StackLayout Spacing="20" Padding="15">
                

                <TimePicker x:Name="Tiempo" 
                            VerticalOptions="Center" 
                            TextColor="Black"   
                            BackgroundColor="White"
                            FontSize="72"
                            Time="{Binding RecordatorioViewModel.Horario}" >

                </TimePicker>

                <StackLayout Orientation="Horizontal" HorizontalOptions="CenterAndExpand" >
                    <Button x:Name="BotonLunes" Text="Lu" Clicked="ApretarBotonDia" BorderRadius="30" WidthRequest="60" HeightRequest="60" >
                        <Button.Triggers>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=   {x:Reference SwitchLunes}, Path= IsToggled}" Value="True">
                                <Setter Property="BackgroundColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button" Binding="{Binding Source= {x:Reference SwitchLunes}, Path= IsToggled}" Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>

                    <Button x:Name="BotonMartes" Text="Ma" Clicked="ApretarBotonDia" BorderRadius="30" WidthRequest="60" HeightRequest="60" >
                        <Button.Triggers>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=   {x:Reference SwitchMartes}, Path= IsToggled}" Value="True">
                                <Setter Property="BackgroundColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button" Binding="{Binding Source= {x:Reference SwitchMartes}, Path= IsToggled}" Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>

                    <Button x:Name="BotonMiercoles" Text="Mi" Clicked="ApretarBotonDia" BorderRadius="30" WidthRequest="60" HeightRequest="60" >
                        <Button.Triggers>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=   {x:Reference SwitchMiercoles}, Path= IsToggled}" Value="True">
                                <Setter Property="BackgroundColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button" Binding="{Binding Source= {x:Reference SwitchMiercoles}, Path= IsToggled}" Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>

                    <Button x:Name="BotonJueves" Text="Ju" Clicked="ApretarBotonDia" BorderRadius="30" WidthRequest="60" HeightRequest="60" >
                        <Button.Triggers>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=   {x:Reference SwitchJueves}, Path= IsToggled}" Value="True">
                                <Setter Property="BackgroundColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button" Binding="{Binding Source= {x:Reference SwitchJueves}, Path= IsToggled}" Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>

                    <Button x:Name="BotonViernes" Text="Vi" Clicked="ApretarBotonDia" BorderRadius="30" WidthRequest="60" HeightRequest="60" >
                        <Button.Triggers>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=  {x:Reference SwitchViernes}, Path= IsToggled}" Value="True">
                                <Setter Property="BackgroundColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=  {x:Reference SwitchViernes}, Path= IsToggled}" Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    
                    <Button x:Name="BotonSabado" Text="Sa" Clicked="ApretarBotonDia" BorderRadius="30" WidthRequest="60" HeightRequest="60" >
                        <Button.Triggers>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=  {x:Reference SwitchSabado}, Path= IsToggled}" Value="True">
                                <Setter Property="BackgroundColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=  {x:Reference SwitchSabado}, Path= IsToggled}" Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                    
                    <Button x:Name="BotonDomingo" Text="Do" Clicked="ApretarBotonDia" BorderRadius="30" WidthRequest="60" HeightRequest="60" >
                        <Button.Triggers>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=  {x:Reference SwitchDomingo}, Path= IsToggled}" Value="True">
                                <Setter Property="BackgroundColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button" Binding="{Binding Source=  {x:Reference SwitchDomingo}, Path= IsToggled}" Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>

                </StackLayout>

                <StackLayout Orientation="Horizontal" IsVisible="False">
                    <Switch x:Name="SwitchLunes" IsToggled ="{Binding RecordatorioViewModel.Lunes}"></Switch>
                    <Switch x:Name="SwitchMartes" IsToggled ="{Binding RecordatorioViewModel.Martes}"></Switch>
                    <Switch x:Name="SwitchMiercoles" IsToggled ="{Binding RecordatorioViewModel.Miercoles}"></Switch>
                    <Switch x:Name="SwitchJueves" IsToggled ="{Binding RecordatorioViewModel.Jueves}"></Switch>
                    <Switch x:Name="SwitchViernes" IsToggled ="{Binding RecordatorioViewModel.Viernes}"></Switch>
                    <Switch x:Name="SwitchSabado" IsToggled ="{Binding RecordatorioViewModel.Sabado}"></Switch>
                    <Switch x:Name="SwitchDomingo" IsToggled ="{Binding RecordatorioViewModel.Domingo}"></Switch>
                </StackLayout>

                <Button         Text="Seleccionar Elementos" 
                                BorderRadius="30" BackgroundColor="White" 
                                HeightRequest="60"  
                                Clicked="AbrirPopupSeleccionarElementos"
                                WidthRequest="60" 
                               />
                <Button         Text="Seleccionar Mochilas" 
                                BorderRadius="30" BackgroundColor="White" 
                                HeightRequest="60"  
                                Clicked="AbrirPopupSeleccionarMochila"
                                WidthRequest="60" 
                               />

                <Picker ItemsSource="ListadoMochila" SelectedItem="{Binding RecordatorioViewModel.MochilaSeleccionada}"/>
                
            </StackLayout>
            
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
